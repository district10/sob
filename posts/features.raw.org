* 基本

- 一般强调
  + *加粗*
  + /斜体/
  + _下划线_
  + ~代码~
  + =verbatim=
  + +删除+

- 定义
  + \alpha :: the utility of the best (highest-value) choice we have
              found so far at any choice point along the path in the
              "max" mode of minimax
  + \beta :: the utility of the best (lowest-value) choice for the
             "min" mode of minimax

- [[http://orgmode.org][超链接]]

- 引用
  #+BEGIN_QUOTE
  绝望之为虚妄, 正与希望相同.
                 --- 鲁迅
  #+END_QUOTE

* 表格

| N | N^2 | N^3 | N^4 | ~sqrt(n)~ | ~sqrt[4](N)~ |
|---+-----+-----+-----+-----------+--------------|
| / |   < |     |   > |         < |            > |
| 1 |   1 |   1 |   1 |         1 |            1 |
| 2 |   4 |   8 |  16 | 1.4142136 |    1.1892071 |
| 3 |   9 |  27 |  81 | 1.7320508 |    1.3160740 |
|---+-----+-----+-----+-----------+--------------|
#+TBLFM: $2=$1^2::$3=$1^3::$4=$1^4::$5=sqrt($1)::$6=sqrt(sqrt(($1)))

* 代码

** 多语言高亮

1. Translate this code from a =for= loop into a =while= loop that does
   the same thing.

   #+BEGIN_SRC python -n
   for i in range(1,100):
       print "i = ", i
   #+END_SRC

2. Translate this code from a =while= loop into a =for= loop that does
   the same thing:

   #+BEGIN_SRC python
   i = 20
   while (i > 0):
       print "i = ", i
       i -= 1
   #+END_SRC

** 索引

#+BEGIN_SRC c -n -r
  #include <stdio.h>

  int main( int argc, char **argv)                    (ref:argv)
  {
      int a = atoi( argv[1] );                        (ref:atoi)
      int b = atoi( argv[2] );
      printf( "a + b = %d + %d = %d\n", a, b, a+b );
      return 0;
  }
#+END_SRC

- [[(argv)][第 (argv) 行]] 的 ~argc~ 是 count of args (arguments), ~argv~ 是
  arguments 数组.
- [[(atoi)][第 (atoi) 行]] 的 ~atoi~ 把 ~char *~ 转化为 ~int~.

* 公式

We see that there are three variable assignments that make the whole
expression true: $x$ is false, $y$ is true, and $z$ is true; $x$ is
false, $y$ is false, and $z$ is true; and $x$ is false, $y$ is false,
and $z$ is false.

Boole's and De Morgan's Laws

  - $\neg F \equiv T$

  - $\neg T \equiv F$

\begin{matrix}
1 & x & x^2 \\
1 & y & y^2 \\
1 & z & z^2 \\
\end{matrix}

f(n) =
\begin{cases}
n/2,  & \text{if $n$ is even} \\
3n+1, & \text{if $n$ is odd}
\end{cases}

* 图片

** 居中

#+BEGIN_CENTER
[[./images/lena.jpg]]
#+END_CENTER

** 左侧

#+BEGIN_HTML
<img align="left" src="images/lena.jpg" alt="Lena (Lenna) Söderberg"
title="Lena (Lenna) Söderberg" style="margin: 0 10px 10px 0;"/>
#+END_HTML

This photo of Lena (Lenna) Söderberg is the most widely used test
image for computer vision applications. I have made a conscious
decision to use this image for examples on this webpage. We should be
respectful of the woman in the photo and know how this image came to
be. Read about the photo at [[http://www.cs.cmu.edu/~chuck/lennapg/lenna.shtml][The Lenna story]].

#+BEGIN_HTML
<div style="clear: both;" />
#+END_HTML

** 多图

#+BEGIN_HTML
<div style="clear: both;"/>
#+END_HTML

| [[./images/lena-blur10x10.jpg]]               | [[./images/lena-blur20x20.jpg]]                 | [[./images/lena-blur20x1.jpg]]               |
| Kernel is 10x10, all values equal to 0.01 | Kernel is 20x20, all values equal to 0.0025 | Kernel is 20x1, all values equal to 0.05 |

We can also achieve a sharpening effect.

| [[./images/sharpen-convolution.png]] | [[./images/lena-sharpen.jpg]] |

#+BEGIN_CENTER
[[./images/3D_Convolution_Animation.gif]]

From [[http://en.m.wikipedia.org/wiki/File:3D_Convolution_Animation.gif][Wikipedia]]
#+END_CENTER

* 宏定义

** summary 宏

{{{begin-summary}}}
- $P(a|b) = P(b|a)P(a)/P(b)$ is Bayes' formula ("Bayes' rule", "Bayes'
  theorem"); it is just a rewrite of the rules of probability. It is
  required that $P(b) \neq 0$.
- Sometimes, we only want to know if $P(h_1|e) > P(h_2|e)$
  (probability of hypothesis 1 is greater than probability of
  hypothesis 2, given the evidence). Then we only have to compare
  $\alpha P(e|h_1)P(h_1)$ vs. $\alpha P(e|h_2)P(h_2)$, where $\alpha =
  1/P(e)$, which we never need to calculate.
- $P(h)$ is the "prior" of a hypothesis (cause/explanation) $h$.
- $P(h|e)$ is the "posterior" of $h$, given evidence $e$ is observed.
{{{end-summary}}}

** hidden 宏

#+BEGIN_SRC prolog
member(5, [1, 2, 3]).
member(X, [1, 2, 3]).
foobar(1, [1, 2, 3]).
foobar(1, [1, 1, 1]).
#+END_SRC

{{{begin-hidden(点我查看答案)}}}
#+BEGIN_SRC prolog
member(5, [1, 2, 3]). % --> false
member(X, [1, 2, 3]). % --> X = 1 or 2 or 3
foobar(1, [1, 2, 3]). % --> true
foobar(1, [1, 1, 1]). % --> false
#+END_SRC
{{{end-hidden}}}
* 扩展功能

先配置 Emacs 打开扩展:

#+BEGIN_SRC emacs-lisp
  (org-babel-do-load-languages
    'org-babel-load-languages
    '(
       (dot . t)
       (sh . t)
       (ditaa . t)
       (plantuml . t))))

  (setq org-plantuml-jar-path "~/bin/plantuml.jar")
#+END_SRC

** [[http://ditaa.sourceforge.net][ditaa]]

#+BEGIN_SRC ditaa :file images/ditaa-example.png :exports both
  +--------------+
  |              |
  | Hello World! |
  |              |
  +--------------+
#+END_SRC

#+RESULTS:
[[file:images/ditaa-example.png]]

** [[http://graphviz.org/][Graphviz]]

#+BEGIN_SRC dot :file images/graphviz-example.png :exports both
  digraph G {
          subgraph cluster_0 {
                  style=filled;
                  color=lightgrey;
                  node [style=filled,color=white];
                  a0 -> a1 -> a2 -> a3;
                  label = "process #1";
          }

          subgraph cluster_1 {
                  node [style=filled];
                  b0 -> b1 -> b2 -> b3;
                  label = "process #2";
                  color=blue
          }
          start -> a0;
          start -> b0;
          a1 -> b3;
          b2 -> a3;
          a3 -> a0;
          a3 -> end;
          b3 -> end;

          start [shape=Mdiamond];
          end [shape=Msquare];
  }
#+END_SRC

#+RESULTS:
[[file:images/graphviz-example.png]]

** [[http://plantuml.com/][PlantUML]]

设置:



#+BEGIN_SRC plantuml :file images/plantuml-example.png :exports both
class Dummy {
  String data
  void methods()
}

class Flight {
   flightNumber : Integer
   departureTime : Date
}
#+END_SRC

#+RESULTS:
[[file:images/plantuml-example.png]]

* 导出

** html

** TODO LaTeX

待续

** docx

#+BEGIN_SRC sh
  cat file.org | perl -p -e "s/\[\[file:/[[/gi;" | pandoc -f org -o file.docx
#+END_SRC

见: [[file:features.docx][features.docx]]
